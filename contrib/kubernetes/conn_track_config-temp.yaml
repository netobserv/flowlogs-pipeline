log-level: error
parameters:
  - ingest:
      ...
    name: ingest_collector
  - decode:
      ...
    name: decode_json

  - name: transform_generic
    transform:
      generic:
        ...
      type: generic

  - name: transform_network
    transform:
      network:
        ...
      type: network

  - name: connection_tracking
    conn_track: # Or connTrack/connectionTracking/connection_tracking
      finishTimeouts: # Per protocol. What if protocol is not one of key fields?
        tcp: 2m
        udp: 30s
        default: 5m
      updateInterval: 1m
      updateFlowLogsCount: 100
      # TODO: Add config option to set the field of the hash
      outputRecordTypes:
        - start # newConnection
        - updates # updatedConnection
        - end # finishedConnection
        # The input fields should include the hash of the connection
        - input # flows/originalFlowLogs

      # All the key fields, along with the hash of the connection will be outputted as well.
      keyFields:
        fieldsGroup:
          - name: src
            fields:
              - SrcAddr
              - SrcPort
              - InIf
          - name: dst
            fields:
              - DstAddr
              - DstPort
              - OutIf
          - name: protocol
            fields:
              - Proto
        hash:
          fieldGroups:
            - protocol
          fieldGroupPair:
            keyA: dst
            keyB: src

      outputFields:
        - name: Bytes
          operation: sum
          splitBA: true # default: false
        - name: Packets
          operation: sum
          splitBA: true
        - name: numFlowLogEntries
          operation: count
          # If the operation is `count` we don't need an 'input' field
        - name: StartTime
          operation: min
          input: TimeReceived
        - name: EndTime
          operation: max
          input: TimeReceived

  - name: extract_aggregate
    extract:
      aggregates:
        ...
      type: aggregates

  - name: encode_prom
    encode:
      prom:
        ...
      type: prom


  - name: write_none
    write:
      ...

pipeline:
  - name: ingest_collector
  - follows: ingest_collector
    name: decode_json
  - follows: decode_json
    name: transform_generic
  - follows: transform_generic
    name: transform_network

  - follows: transform_network
    name: connection_tracking

  - follows: connection_tracking
    name: encode_prom

  - follows: extract_aggregate
    name: encode_prom
  - follows: encode_prom
    name: write_none

